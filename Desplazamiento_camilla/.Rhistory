pnorm(0.90)
qnorm(0.90)
qnorm(0.1)
pnorm(0.10)
pnorm(0.45)
qnorm(0.45)
qnorm(0.45)
qnorm(0.05)
qnorm(-0.05)
qnorm(0.05)
qnorm(0.05)
qnorm(0.0025)
qnorm(0.025)
qnorm(0.025,lower.tail = F)
qrnorm(0.1/2)
qnorm(0.1/2)
qchisqr(0.01,8,lower.tail = F)
qchisqr(0.01,8,lower.tail = F)
qchisq(0.01,8,lower.tail = F)
qchisq(0.05,4,lower.tail = F)
1
qchisq(0.01,8,lower.tail = F)
pnorm(0)
pnorm(2.39)
pnorm(-2.39)
pnorm(-2.35)
pnorm(-1.86)-pnorm(-2.35)
pnorm(-1.78)-pnorm(-2.39)
5
pnorm(-1.86)-pnorm(-2.35)
pnorm(-1.36)-pnorm(-1.86)
pnorm(-0.86)-pnorm(-1.36)
pnorm(-0.36)-pnorm(-0.86)
pnorm(0.12)-pnorm(-0.36)
pnorm(0.62)-pnorm(0.12)
pnorm(1.12)-pnorm(0.62)
pnorm(1.62)-pnorm(1.12)
pnorm(2.11)-pnorm(1.62)
pnorm(2.11)
pnorm(2.45)
pnorm(2.45)-1
pnorm(2.45)+1
1-pnorm(2.45)
1-pnorm(2.11)
qchisq(0.01,10,lower.tail = F)
qchisq(0.01,10,lower.tail = T)
pchisq(2.493,10,lower.tail = F)
dbinom(0, size=12, prob=0.2)
dbinom(0, size=24, prob=0.2)
dbinom(0, size=24, prob=0.2)
dbinom(0, size=25, prob=0.2)
dbinom(0, size=10, prob=0.2)
dbinom(0, size=10, prob=0.2)*100
dbinom(1, size=10, prob=0.2)*100
dbinom(1, size=10, prob=0.2)
qchisq(0.05,5,lower.tail = F)
dbinom(10, size=10, prob=0.2)
dbinom(10, size=25, prob=0.2)
dbinom(1, size=25, prob=0.2)
dbinom(9, size=25, prob=0.2)
dbinom(10, size=25, prob=0.2)
1-dbinom(10, size=25, prob=0.2)
dbinom(10, size=25, prob=0.2)
dbinom(25, size=25, prob=0.2)
dbinom(11, size=25, prob=0.2)
dbinom(10, size=25, prob=0.2)
+dbinom(8, size=25, prob=0.2)+dbinom(9, size=25, prob=0.2)
1-dbinom(0, size=25, prob=0.2)+dbinom(1, size=25, prob=0.2)+dbinom(2, size=25, prob=0.2)+dbinom(3, size=25, prob=0.2)+dbinom(4, size=25, prob=0.2)+dbinom(5, size=25, prob=0.2)+dbinom(6, size=25, prob=0.2)+dbinom(7, size=25, prob=0.2)+dbinom(8, size=25, prob=0.2)+dbinom(9, size=25, prob=0.2)
dbinom(0, size=25, prob=0.2)+dbinom(1, size=25, prob=0.2)+dbinom(2, size=25, prob=0.2)+dbinom(3, size=25, prob=0.2)+dbinom(4, size=25, prob=0.2)+dbinom(5, size=25, prob=0.2)+dbinom(6, size=25, prob=0.2)+dbinom(7, size=25, prob=0.2)+dbinom(8, size=25, prob=0.2)+dbinom(9, size=25, prob=0.2)
1-dbinom(0, size=25, prob=0.2)+dbinom(1, size=25, prob=0.2)+dbinom(2, size=25, prob=0.2)+dbinom(3, size=25, prob=0.2)+dbinom(4, size=25, prob=0.2)+dbinom(5, size=25, prob=0.2)+dbinom(6, size=25, prob=0.2)+dbinom(7, size=25, prob=0.2)+dbinom(8, size=25, prob=0.2)+dbinom(9, size=25, prob=0.2)
1-(dbinom(0, size=25, prob=0.2)+dbinom(1, size=25, prob=0.2)+dbinom(2, size=25, prob=0.2)+dbinom(3, size=25, prob=0.2)+dbinom(4, size=25, prob=0.2)+dbinom(5, size=25, prob=0.2)+dbinom(6, size=25, prob=0.2)+dbinom(7, size=25, prob=0.2)+dbinom(8, size=25, prob=0.2)+dbinom(9, size=25, prob=0.2))
dbinom(0, size=10, prob=0.2)
dbinom(1, size=10, prob=0.2)
dbinom(2, size=10, prob=0.2)
dbinom(3, size=10, prob=0.2)
dbinom(4, size=10, prob=0.2)
1-(dbinom(0, size=10, prob=0.2)+dbinom(1, size=10, prob=0.2)+dbinom(2, size=10, prob=0.2)+dbinom(3, size=10, prob=0.2)+dbinom(4, size=10, prob=0.2))
dbinom(4, size=10, prob=0.20)
qchisq(0.05,5,lower.tail = F)
pchisq(3.405,5,lower.tail = F)
qchisq(0.05,1,lower.tail = F)
pchisq(0.076,1,lower.tail = F)
qchisq(0.05,2,lower.tail = F)
pchisq(4.108,2,lower.tail = F)
pchisq(9.09,2,lower.tail = F)
qchisq(0.05,1,lower.tail = F)
pchisq(16.874,1,lower.tail = F)
setwd("C:/Users/Usuario/OneDrive/Documentos/Sexto Semestre/Bioestadística/Proyecto2bioestadistica")
data2020<-read.csv("dengue_abierto2020.csv",header=TRUE)
data2021<-read.csv("dengue_abierto2021.csv",header=TRUE)
data2022<-read.csv("dengue_abierto2022.csv",header=TRUE)
summary(data2022$EDAD_ANOS)
summary(data2021$EDAD_ANOS)
summary(data2020$EDAD_ANOS)
t <- data2022$ESTATUS_CASO
t[t==2] <- 0
t[t==1 | t==3] <- 1
table(t)
t <- as.character(t)
#unir la columna a la tabla inicial
data2022 <- cbind(data2022,t)
data2022
confirmados2022 <- data2022 %>%
filter(t=="0") %>%
select(SEXO,EDAD_ANOS)
View(confirmados2022)
u <- data2021$ESTATUS_CASO
u[u==2] <- 0
u[u==1 | u==3] <- 1
table(u)
u <- as.character(u)
#unir la columna a la tabla inicial
data2021 <- cbind(data2021,u)
data2021
confirmados2021 <- data2021 %>%
filter(u=="0") %>%
select(SEXO,EDAD_ANOS)
View(confirmados2021)
v <- data2020$ESTATUS_CASO
v[v==1 | v==3] <- 1
table(v)
v <- as.character(v)
#unir la columna a la tabla inicial
data2020 <- cbind(data2020,v)
data2020
confirmados2020 <- data2020 %>%
filter(v=="0") %>%
select(SEXO,EDAD_ANOS)
View(confirmados2020)
#Guardar los confirmados en formato csv
write.csv(confirmados2020,"C:/Users/Usuario/OneDrive/Documentos/Sexto Semestre/Bioestadística/Proyecto2bioestadistica//confirmados2020.csv",row.names = FALSE)
write.csv(confirmados2021,"C:/Users/Usuario/OneDrive/Documentos/Sexto Semestre/Bioestadística/Proyecto2bioestadistica//confirmados2021.csv",row.names = FALSE)
write.csv(confirmados2022,"C:/Users/Usuario/OneDrive/Documentos/Sexto Semestre/Bioestadística/Proyecto2bioestadistica//confirmados2022.csv",row.names = FALSE)
confirmados2020$EDAD_ANOS
confirmados2021$EDAD_ANOS
confirmados2022$EDAD_ANOS
summary(confirmados2020$EDAD_ANOS)
sd(confirmados2020$EDAD_ANOS)
summary(confirmados2021$EDAD_ANOS)
sd(confirmados2021$EDAD_ANOS)
summary(confirmados2022$EDAD_ANOS)
sd(confirmados2022$EDAD_ANOS)
#Pruebas de normalidad de la distribución de edades
#Lillie test
library(nortest)
lillie.test(confirmados2020$EDAD_ANOS)
lillie.test(confirmados2021$EDAD_ANOS)
lillie.test(confirmados2022$EDAD_ANOS)
#ANOVA
#Llamamos al dataframe con todos los casos confirmados de 2020 a 2022
data2020a2022<-read.csv("C:/Users/Usuario/OneDrive/Documentos/Sexto Semestre/Bioestadística/Proyecto2bioestadistica/confirmados2020-2022.csv",header = TRUE)
View(data2020a2022)
analysis<-aov(EDAD_ANOS ~ as.factor(ANO),data=data2020a2022)
summary(analysis)
TukeyHSD(analysis,conf.level =.95)
qt(0.05,2419)
t.test(confirmados2020$EDAD_ANOS,y=NULL,alternative=c("less"),mu=31.38,paired = FALSE, var.equal = FALSE,0.95)
qt(0.05,6326)
t.test(confirmados2021$EDAD_ANOS,y=NULL,alternative=c("less"),mu=31.38,paired = FALSE, var.equal = FALSE,0.95)
qt(0.05,12121)
t.test(confirmados2022$EDAD_ANOS,y=NULL,alternative=c("less"),mu=31.38,paired = FALSE, var.equal = FALSE,0.95)
setwd("C:\\Users\\c-lop\\Documents\\GitHub\\Radioterapia_SS\\Desplazamiento_camilla")
datos<-read.csv("colchones.csv",header=TRUE)
str(datos)
desplazamientos_col <- c("vrt", "lng", "lat", "cabeceo", "balanceo", "rot")
for (col in desplazamientos_col) {
datos[[paste0(col, "_num")]] <- as.numeric(gsub("n\\.d\\.|n\\.i\\.", NA, datos[[col]]))
}
library(ggplot2)
library(tidyr)
library(dplyr)
ids_pacientes <- unique(datos$id)
# Filtrar datos para un paciente específico
for (id_f in ids_pacientes) {datos_paciente <- datos %>% filter(id == {{ id_f }})
ggplot(datos, aes(x = fecha, y = vrt, group = id)) +
geom_line() +
geom_point() +
labs(title = "Desplazamientos por paciente",
x = "Día",
y = "Desplazamiento camilla") +
facet_wrap(~ id) +  # Crea un gráfico por cada paciente
theme_minimal()
for (id_f in ids_pacientes) {datos_paciente <- datos %>% filter(id == {{ id_f }})
for (id_f in ids_pacientes) {datos_paciente <- datos %>% filter(id == {{ id_f }})}
for (id_f in ids_pacientes) {datos_paciente <- datos %>% filter(id == {{ id_f }})}
View(datos_paciente)
View(datos_paciente)
for (id_f in ids_pacientes) {
datos_paciente <- datos %>% filter(id == {{ id_f }})
ggplot(datos_paciente, aes(x = fecha, y = vrt)) +
geom_line() +
geom_point() +
labs(title = "Desplazamientos por paciente",
x = "Día",
y = "Desplazamiento camilla") +
theme_minimal()
}
ids_pacientes <- unique(datos$id)
for (id_f in ids_pacientes) {
datos_paciente <- datos %>% filter(id == {{ id_f }})
ggplot(datos_paciente, aes(x = fecha, y = vrt)) +
geom_line() +
geom_point() +
labs(title = "Desplazamientos por paciente",
x = "Día",
y = "Desplazamiento camilla") +
theme_minimal()
ggsave(filename = paste0("grafico_paciente_", id_f, ".png"), plot = p)
}
for (id_f in ids_pacientes) {
datos_paciente <- datos %>% filter(id == {{ id_f }})
p <- ggplot(datos_paciente, aes(x = fecha, y = vrt)) +
geom_line() +
geom_point() +
labs(title = "Desplazamientos por paciente",
x = "Día",
y = "Desplazamiento camilla") +
theme_minimal()
ggsave(filename = paste0("grafico_paciente_", id_f, ".png"), plot = p)
}
for (id_f in ids_pacientes) {
datos_paciente <- datos %>% filter(id == {{ id_f }})
p <- ggplot(datos_paciente, aes(x = fecha, y = vrt)) +
geom_line() +
geom_point() +
labs(title = "Desplazamientos por paciente",
x = "Día",
y = "Desplazamiento camilla") +
theme_minimal()
ggsave(filename = paste0("grafico_desplazamientos_", id_f, ".jpg"), plot = p)
}
for (id_f in ids_pacientes) {
datos_paciente <- datos %>% filter(id == {{ id_f }})
p <- ggplot(datos_paciente, aes(x = fraccion, y = vrt)) +
geom_line() +
geom_point() +
labs(title = "Desplazamientos por paciente",
x = "Día",
y = "Desplazamiento camilla") +
theme_minimal()
ggsave(filename = paste0("grafico_desplazamientos_", id_f, ".jpg"), plot = p)
}
for (id_f in ids_pacientes) {
datos_paciente <- datos %>% filter(id == {{ id_f }})
p <- ggplot(datos_paciente, aes(x = fraccion, y = vrt)) +
geom_line() +
geom_point() +
labs(title = "Desplazamientos por paciente",
x = "Día",
y = "Desplazamiento camilla") +
theme_minimal()
ggsave(filename = paste0("grafico_desplazamientos_", id_f, ".jpg"), plot = p)
}
for (id_f in ids_pacientes) {
datos_paciente <- datos %>% filter(id == {{ id_f }})
p <- ggplot(datos_paciente, aes(x = fraccion, y = vrt)) +
geom_line() +
geom_point() +
labs(title = "Desplazamientos de camilla:" + as.character(id_f),
x = "Día",
y = "Desplazamiento camilla") +
theme_minimal()
ggsave(filename = paste0("grafico_desplazamientos_", id_f, ".jpg"), plot = p)
}
for (id_f in ids_pacientes) {
datos_paciente <- datos %>% filter(id == {{ id_f }})
p <- ggplot(datos_paciente, aes(x = fraccion, y = vrt)) +
geom_line() +
geom_point() +
labs(title = "Desplazamientos de camilla:" + as.character(id_f),
x = "Día",
y = "Desplazamiento camilla") +
theme_minimal()
ggsave(filename = paste0("grafico_desplazamientos_", id_f, ".jpg"), plot = p)
}
for (id_f in ids_pacientes) {
datos_paciente <- datos %>% filter(id == {{ id_f }})
p <- ggplot(datos_paciente, aes(x = fraccion, y = vrt)) +
geom_line() +
geom_point() +
labs(title = "Desplazamientos de camilla:" + id_f,
x = "Día",
y = "Desplazamiento camilla") +
theme_minimal()
ggsave(filename = paste0("grafico_desplazamientos_", id_f, ".jpg"), plot = p)
}
for (id_f in ids_pacientes) {
datos_paciente <- datos %>% filter(id == {{ id_f }})
p <- ggplot(datos_paciente, aes(x = fraccion, y = vrt)) +
geom_line() +
geom_point() +
labs(title = paste0("Desplazamientos de camilla: ", id_f),
x = "Día",
y = "Desplazamiento camilla") +
theme_minimal()
ggsave(filename = paste0("grafico_desplazamientos_", id_f, ".jpg"), plot = p)
}
p <- ggplot(datos_paciente, aes(x = fraccion, y = vrt)) +
geom_line() +
geom_point() +
labs(title = paste0("Desplazamientos de camilla: ", id_f),
x = "Fracción",
y = "Desplazamiento camilla") +
theme_minimal()
for (id_f in ids_pacientes) {
datos_paciente <- datos %>% filter(id == {{ id_f }})
p <- ggplot(datos_paciente, aes(x = fraccion, y = vrt)) +
geom_line() +
geom_point() +
labs(title = "Desplazamientos de camilla:" + id_f,
x = "Día",
y = "Desplazamiento camilla") +
theme_minimal()
ggsave(filename = paste0("grafico_desplazamientos_", id_f, ".jpg"), plot = p)
}
for (id_f in ids_pacientes) {
datos_paciente <- datos %>% filter(id == {{ id_f }})
p <- ggplot(datos_paciente, aes(x = fraccion, y = vrt)) +
geom_line() +
geom_point() +
labs(title = paste0("Desplazamientos de camilla: ", id_f),
x = "Fracción",
y = "Desplazamiento camilla") +
theme_minimal()
ggsave(filename = paste0("grafico_desplazamientos_", id_f, ".jpg"), plot = p)
}
for (id_f in ids_pacientes) {
datos_paciente <- datos %>% filter(id == {{ id_f }})
p <- ggplot(datos_paciente, aes(x = fraccion, y = vrt_num)) +
geom_line() +
geom_point() +
labs(title = paste0("Desplazamientos de camilla: ", id_f),
x = "Fracción",
y = "Desplazamiento camilla") +
theme_minimal()
ggsave(filename = paste0("grafico_desplazamientos_", id_f, ".jpg"), plot = p)
}
