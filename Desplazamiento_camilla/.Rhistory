geom_text(aes(label = etiqueta), position = position_stack(vjust = 0.5), size = 10, color = "black") +  # Etiquetas con conteo y porcentaje
labs(#title = "Proporción de pacientes que utilizan barras de indexación",
fill = "Uso de barras de indexación V") +
theme_void() +                        # Eliminar fondo y ejes
scale_fill_manual(values = c("red", "green")) +  # Colores
theme(
#plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
legend.text = element_text(size = 14),
#legend.title = element_text(size = 16)
)
# Guardar el gráfico en un archivo
ggsave(filename = paste0("pastel_uso_v.svg"), plot = p_uso_v, width = 10, height = 8)
# Crear la gráfica de pastel
p_uso_v <- ggplot(datos_unicos, aes(x = "", y = conteo, fill = factor(uso_v, labels = c("No utiliza", "Utiliza")))) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
geom_text(aes(label = etiqueta), position = position_stack(vjust = 0.5), size = 8, color = "black") +  # Etiquetas con conteo y porcentaje
labs(#title = "Proporción de pacientes que utilizan barras de indexación",
fill = "Uso de barras de indexación V") +
theme_void() +                        # Eliminar fondo y ejes
scale_fill_manual(values = c("red", "green")) +  # Colores
theme(
#plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
legend.text = element_text(size = 14),
legend.title = element_text(size = 16)
)
# Guardar el gráfico en un archivo
ggsave(filename = paste0("pastel_uso_v.svg"), plot = p_uso_v, width = 10, height = 8)
# Histogramas de magnitud lineal
ggplot(datos_filtrados_lineal, aes(x = magnitud_lineal, fill = factor(uso_v, labels = c("No utiliza", "Utiliza")))) +
geom_histogram(aes(y = ..density..), binwidth = 1, position = "identity", alpha = 0.5, color = "black") +
geom_density(alpha = 0.2, adjust = 1.5) +  # Añadir curva de densidad
labs(title = "Histograma de Magnitud Lineal", x = "Magnitud Lineal", y = "Densidad", fill = "Uso de Barras de Indexación") +
theme_minimal()
# Histogramas de magnitud angular
ggplot(datos_filtrados_angular, aes(x = magnitud_angular, fill = factor(uso_v, labels = c("No utiliza", "Utiliza")))) +
geom_histogram(aes(y = ..density..), binwidth = 1, position = "identity", alpha = 0.5, color = "black") +
geom_density(alpha = 0.2, adjust = 1.5) +  # Añadir curva de densidad
labs(title = "Histograma de Magnitud Angular", x = "Magnitud Angular", y = "Densidad", fill = "Uso de Barras de Indexación") +
theme_minimal()
# Boxplot de magnitud lineal
ggplot(datos_filtrados_lineal, aes(x = factor(uso_v, labels = c("No utiliza", "Utiliza")), y = magnitud_lineal, fill = factor(uso_v, labels = c("No utiliza", "Utiliza")))) +
geom_boxplot(alpha = 0.7) +
labs(title = "Boxplot de Magnitud Lineal", x = "Uso de Barras de Indexación", y = "Magnitud Lineal", fill = "Uso de Barras de Indexación") +
theme_minimal()
# Boxplot de magnitud angular
ggplot(datos_filtrados_angular, aes(x = factor(uso_v, labels = c("No utiliza", "Utiliza")), y = magnitud_angular, fill = factor(uso_v, labels = c("No utiliza", "Utiliza")))) +
geom_boxplot(alpha = 0.7) +
labs(title = "Boxplot de Magnitud Angular", x = "Uso de Barras de Indexación", y = "Magnitud Angular", fill = "Uso de Barras de Indexación") +
theme_minimal()
# Boxplot de magnitud lineal
ggplot(datos_filtrados_lineal, aes(x = factor(uso_v, labels = c("No utiliza", "Utiliza")), y = magnitud_lineal, fill = factor(uso_v, labels = c("No utiliza", "Utiliza")))) +
geom_boxplot(alpha = 0.7) +
labs(title = "Boxplot de la magnitud del error lineal respecto al uso de V", x = "Uso de barras de indexación V", y = "Magnitud del error lineal [cm]", fill = "Uso de barras de indexación V") +
theme_minimal() +
scale_fill_manual(values = c("red", "green"))
# Boxplot de magnitud angular
ggplot(datos_filtrados_angular, aes(x = factor(uso_v, labels = c("No utiliza", "Utiliza")), y = magnitud_angular, fill = factor(uso_v, labels = c("No utiliza", "Utiliza")))) +
geom_boxplot(alpha = 0.7) +
labs(title = "Boxplot de la magnitud del error angular respecto al uso de V", x = "Uso de barras de indexación V", y = "Magnitud del error angular [°]", fill = "Uso de barras de indexación V") +
theme_minimal() +
scale_fill_manual(values = c("red", "green"))
# Boxplot de magnitud lineal
ggplot(datos_filtrados_lineal, aes(x = factor(uso_v, labels = c("No utiliza", "Utiliza")), y = magnitud_lineal, fill = factor(uso_v, labels = c("No utiliza", "Utiliza")))) +
geom_boxplot(alpha = 0.7) +
labs(title = "Boxplot de la magnitud del error lineal respecto al uso de V", x = "Uso de barras de indexación V", y = "Magnitud del error lineal [cm]", fill = "Uso de barras de indexación V") +
theme_minimal() +
scale_fill_manual(values = c("red", "green")) +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
legend.text = element_text(size = 14),
legend.title = element_text(size = 16)
)
# Boxplot de magnitud lineal
ggplot(datos_filtrados_lineal, aes(x = factor(uso_v, labels = c("No utiliza", "Utiliza")), y = magnitud_lineal, fill = factor(uso_v, labels = c("No utiliza", "Utiliza")))) +
geom_boxplot(alpha = 0.7) +
labs(title = "Boxplot de la magnitud del error lineal respecto al uso de V", x = "Uso de barras de indexación V", y = "Magnitud del error lineal [cm]", fill = "Uso de barras de indexación V") +
theme_minimal() +
scale_fill_manual(values = c("red", "green")) +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14)
)
# Boxplot de magnitud lineal
p_box_v_lineal <- ggplot(datos_filtrados_lineal, aes(x = factor(uso_v, labels = c("No utiliza", "Utiliza")), y = magnitud_lineal, fill = factor(uso_v, labels = c("No utiliza", "Utiliza")))) +
geom_boxplot(alpha = 0.7) +
labs(title = "Boxplot de la magnitud del error lineal respecto al uso de V", x = "Uso de barras de indexación V", y = "Magnitud del error lineal [cm]", fill = "Uso de barras de indexación V") +
theme_minimal() +
scale_fill_manual(values = c("red", "green")) +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14)
)
# Guardar el gráfico en un archivo
ggsave(filename = paste0("pastel_box_v_lineal.svg"), plot = p_box_v_lineal <-, width = 10, height = 8)
# Guardar el gráfico en un archivo
ggsave(filename = paste0("pastel_box_v_lineal.svg"), plot = p_box_v_lineal, width = 10, height = 8)
# Boxplot de magnitud lineal
p_box_v_lineal <- ggplot(datos_filtrados_lineal, aes(x = factor(uso_v, labels = c("No utiliza", "Utiliza")), y = magnitud_lineal, fill = factor(uso_v, labels = c("No utiliza", "Utiliza")))) +
geom_boxplot(alpha = 0.7) +
labs(title = "Boxplot de la magnitud del error lineal respecto al uso de V", x = "Uso de barras de indexación V", y = "Magnitud del error lineal [cm]", fill = "Uso de barras de indexación V") +
theme_minimal() +
scale_fill_manual(values = c("red", "green")) +
theme(
plot.title = element_text(hjust = 0.75, size = 16, face = "bold"),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14)
)
# Boxplot de magnitud lineal
p_box_v_lineal <- ggplot(datos_filtrados_lineal, aes(x = factor(uso_v, labels = c("No utiliza", "Utiliza")), y = magnitud_lineal, fill = factor(uso_v, labels = c("No utiliza", "Utiliza")))) +
geom_boxplot(alpha = 0.7) +
labs(title = "Boxplot de la magnitud del error lineal respecto al uso de V", x = "Uso de barras de indexación V", y = "Magnitud del error lineal [cm]", fill = "Uso de barras de indexación V") +
theme_minimal() +
scale_fill_manual(values = c("red", "green")) +
theme(
plot.title = element_text(hjust = 0.75, size = 16, face = "bold"),
legend.text = element_text(size = 14),
legend.title = element_text(size = 16)
)
# Guardar el gráfico en un archivo
ggsave(filename = paste0("pastel_box_v_lineal.svg"), plot = p_box_v_lineal, width = 10, height = 8)
# Boxplot de magnitud lineal
p_box_v_lineal <- ggplot(datos_filtrados_lineal, aes(x = factor(uso_v, labels = c("No utiliza", "Utiliza")), y = magnitud_lineal, fill = factor(uso_v, labels = c("No utiliza", "Utiliza")))) +
geom_boxplot(alpha = 0.7) +
labs(title = "Boxplot de la magnitud del error lineal respecto al uso de V", x = "Uso de barras de indexación V", y = "Magnitud del error lineal [cm]", fill = "Uso de barras de indexación V") +
theme_minimal() +
scale_fill_manual(values = c("red", "green")) +
theme(
plot.title = element_text(hjust = 0.25, size = 16, face = "bold"),
legend.text = element_text(size = 14),
legend.title = element_text(size = 16)
)
# Guardar el gráfico en un archivo
ggsave(filename = paste0("pastel_box_v_lineal.svg"), plot = p_box_v_lineal, width = 10, height = 8)
# Boxplot de magnitud lineal
p_box_v_lineal <- ggplot(datos_filtrados_lineal, aes(x = factor(uso_v, labels = c("No utiliza", "Utiliza")), y = magnitud_lineal, fill = factor(uso_v, labels = c("No utiliza", "Utiliza")))) +
geom_boxplot(alpha = 0.7) +
labs(title = "Boxplot de la magnitud del error lineal respecto al uso de V", x = "Uso de barras de indexación V", y = "Magnitud del error lineal [cm]", fill = "Uso de barras de indexación V") +
theme_minimal() +
scale_fill_manual(values = c("red", "green")) +
theme(
plot.title = element_text(hjust = 0.25, size = 16, face = "bold"),
legend.text = element_text(size = 14),
legend.title = element_text(size = 16)
)
# Guardar el gráfico en un archivo
ggsave(filename = paste0("pastel_box_v_lineal.svg"), plot = p_box_v_lineal, width = 10, height = 8)
# Boxplot de magnitud lineal
p_box_v_lineal <- ggplot(datos_filtrados_lineal, aes(x = factor(uso_v, labels = c("No utiliza", "Utiliza")), y = magnitud_lineal, fill = factor(uso_v, labels = c("No utiliza", "Utiliza")))) +
geom_boxplot(alpha = 0.7) +
labs(title = "Boxplot de la magnitud del error lineal respecto al uso de V", x = "Uso de barras de indexación V", y = "Magnitud del error lineal [cm]", fill = "Uso de barras de indexación V") +
theme_minimal() +
scale_fill_manual(values = c("red", "green")) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 14), # Tamaño del título del eje X
axis.title.y = element_text(size = 14, color = "black"), # Tamaño del título del eje Y
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 12), # Tamaño de texto en eje X
axis.text.y = element_text(size = 12), # Tamaño de texto en eje Y
legend.position = "none",
legend.text = element_text(size = 16),
legend.title = element_text(size = 18)
)
# Guardar el gráfico en un archivo
ggsave(filename = paste0("pastel_box_v_lineal.svg"), plot = p_box_v_lineal, width = 10, height = 8)
# Boxplot de magnitud lineal
p_box_v_lineal <- ggplot(datos_filtrados_lineal, aes(x = factor(uso_v, labels = c("No utiliza", "Utiliza")), y = magnitud_lineal, fill = factor(uso_v, labels = c("No utiliza", "Utiliza")))) +
geom_boxplot(alpha = 0.7) +
labs(title = "Boxplot de la magnitud del error lineal respecto al uso de V", x = "Uso de barras de indexación V", y = "Magnitud del error lineal [cm]", fill = "Uso de barras de indexación V") +
theme_minimal() +
scale_fill_manual(values = c("red", "green")) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5, size = 18),
axis.title.x = element_text(size = 14), # Tamaño del título del eje X
axis.title.y = element_text(size = 14, color = "black"), # Tamaño del título del eje Y
axis.text.x = element_text(vjust = 0.5, hjust = 1, size = 12), # Tamaño de texto en eje X
axis.text.y = element_text(size = 12), # Tamaño de texto en eje Y
legend.position = "none",
legend.text = element_text(size = 16),
legend.title = element_text(size = 18)
)
# Guardar el gráfico en un archivo
ggsave(filename = paste0("pastel_box_v_lineal.svg"), plot = p_box_v_lineal, width = 10, height = 8)
# Calcular el promedio y desviación estándar para magnitud lineal y angular
resumen_magnitud <- datos %>%
group_by(uso_v) %>%
summarise(
promedio_lineal = mean(magnitud_lineal, na.rm = TRUE),
sd_lineal = sd(magnitud_lineal, na.rm = TRUE),
promedio_angular = mean(magnitud_angular, na.rm = TRUE),
sd_angular = sd(magnitud_angular, na.rm = TRUE)
) %>%
mutate(uso_v = factor(uso_v, labels = c("No utiliza", "Utiliza")))  # Etiquetar las categorías
# Mostrar el resumen de estadísticas
print(resumen_magnitud)
# Calcular el promedio y desviación estándar para magnitud lineal y angular
resumen_magnitud <- datos_filtrados_lineal %>%
group_by(uso_v) %>%
summarise(
promedio_lineal = mean(magnitud_lineal, na.rm = TRUE),
sd_lineal = sd(magnitud_lineal, na.rm = TRUE),
) %>%
mutate(uso_v = factor(uso_v, labels = c("No utiliza", "Utiliza")))  # Etiquetar las categorías
# Mostrar el resumen de estadísticas
print(resumen_magnitud)
theme(
plot.title = element_text(face = "bold", hjust = 0.5, size = 18),
axis.title.x = element_text(size = 14), # Tamaño del título del eje X
axis.title.y = element_text(size = 14, color = "black"), # Tamaño del título del eje Y
axis.text.x = element_text(vjust = 0.5, hjust = 1, size = 12), # Tamaño de texto en eje X
axis.text.y = element_text(size = 12), # Tamaño de texto en eje Y
legend.position = "none",
legend.text = element_text(size = 16),
legend.title = element_text(size = 18)
)
# Guardar el gráfico en un archivo
ggsave(filename = paste0("pastel_box_v_angular.svg"), plot = p_box_v_angular, width = 10, height = 8)
# Boxplot de magnitud angular
p_box_v_angular <- ggplot(datos_filtrados_angular, aes(x = factor(uso_v, labels = c("No utiliza", "Utiliza")), y = magnitud_angular, fill = factor(uso_v, labels = c("No utiliza", "Utiliza")))) +
geom_boxplot(alpha = 0.7) +
labs(title = "Boxplot de la magnitud del error angular respecto al uso de V", x = "Uso de barras de indexación V", y = "Magnitud del error angular [°]", fill = "Uso de barras de indexación V") +
theme_minimal() +
scale_fill_manual(values = c("red", "green"))
# Boxplot de magnitud angular
p_box_v_angular <- ggplot(datos_filtrados_angular, aes(x = factor(uso_v, labels = c("No utiliza", "Utiliza")), y = magnitud_angular, fill = factor(uso_v, labels = c("No utiliza", "Utiliza")))) +
geom_boxplot(alpha = 0.7) +
labs(title = "Boxplot de la magnitud del error angular respecto al uso de V", x = "Uso de barras de indexación V", y = "Magnitud del error angular [°]", fill = "Uso de barras de indexación V") +
theme_minimal() +
scale_fill_manual(values = c("red", "green")) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5, size = 18),
axis.title.x = element_text(size = 14), # Tamaño del título del eje X
axis.title.y = element_text(size = 14, color = "black"), # Tamaño del título del eje Y
axis.text.x = element_text(vjust = 0.5, hjust = 1, size = 12), # Tamaño de texto en eje X
axis.text.y = element_text(size = 12), # Tamaño de texto en eje Y
legend.position = "none",
legend.text = element_text(size = 16),
legend.title = element_text(size = 18)
)
# Guardar el gráfico en un archivo
ggsave(filename = paste0("pastel_box_v_angular.svg"), plot = p_box_v_angular, width = 10, height = 8)
# Calcular el promedio y desviación estándar para magnitud angular
resumen_magnitud <- datos_filtrados_angular %>%
group_by(uso_v) %>%
summarise(
promedio_angular = mean(magnitud_angular, na.rm = TRUE),
sd_angular = sd(magnitud_angular, na.rm = TRUE),
) %>%
mutate(uso_v = factor(uso_v, labels = c("No utiliza", "Utiliza")))  # Etiquetar las categorías
# Mostrar el resumen de estadísticas
print(resumen_magnitud)
# Calcular el promedio y desviación estándar para magnitud lineal
resumen_magnitud <- datos_filtrados_lineal %>%
group_by(uso_v) %>%
summarise(
promedio_lineal = mean(magnitud_lineal, na.rm = TRUE),
sd_lineal = sd(magnitud_lineal, na.rm = TRUE),
) %>%
mutate(uso_v = factor(uso_v, labels = c("No utiliza", "Utiliza")))  # Etiquetar las categorías
# Mostrar el resumen de estadísticas
print(resumen_magnitud)
# Calcular el promedio y desviación estándar para magnitud angular
resumen_magnitud <- datos_filtrados_angular %>%
group_by(uso_v) %>%
summarise(
promedio_angular = mean(magnitud_angular, na.rm = TRUE),
sd_angular = sd(magnitud_angular, na.rm = TRUE),
) %>%
mutate(uso_v = factor(uso_v, labels = c("No utiliza", "Utiliza")))  # Etiquetar las categorías
# Mostrar el resumen de estadísticas
print(resumen_magnitud)
View(datos_filtrados_angular)
View(datos_filtrados_angular)
# Filtrar datos para los dos grupos
grupo_utiliza <- datos %>% filter(uso_v == 1)  # Pacientes que utilizan barras
grupo_no_utiliza <- datos %>% filter(uso_v == 0)  # Pacientes que no utilizan barras
# Prueba t para magnitud lineal
t_test_lineal <- t.test(magnitud_lineal ~ uso_v, data = datos, var.equal = TRUE)
print(t_test_lineal)
# Prueba t para magnitud lineal
t_test_lineal <- t.test(magnitud_lineal ~ uso_v, data = datos_filtrados_lineal, var.equal = TRUE)
print(t_test_lineal)
# Prueba t para magnitud angular
t_test_angular <- t.test(magnitud_angular ~ uso_v, data = datos_filtrados_angular, var.equal = TRUE)
print(t_test_angular)
View(datos)
# Filtrar por ID único y contar por tipo de plan
datos_unicos <- datos %>%
distinct(id, .keep_all = TRUE) %>%
group_by(tipo) %>%                 # Agrupar por tipo de plan
summarise(conteo = n()) %>%
ungroup() %>%
mutate(porcentaje = conteo / sum(conteo) * 100,
etiqueta = paste0("N: ", conteo, "\n", round(porcentaje, 1), "%"))  # Crear etiqueta
# Crear la gráfica de pastel
p_tipo_plan <- ggplot(datos_unicos, aes(x = "", y = conteo, fill = factor(tipo))) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
geom_text(aes(label = etiqueta), position = position_stack(vjust = 0.5), size = 8, color = "black") +
labs(fill = "Tipo de Plan") +
theme_void() +
scale_fill_manual(values = c("red", "green")) +  # Colores para SBRT y no SBRT
theme(
legend.text = element_text(size = 14),
legend.title = element_text(size = 16)
)
#Guardar el gráfico en un archivo
ggsave(filename = paste0("pastel_tipo_plan.svg"), plot = p_tipo_plan, width = 10, height = 8)
# Boxplot de magnitud lineal
p_box_v_lineal <- ggplot(datos, aes(x = factor(tipo), y = magnitud_lineal, fill = factor(tipo))) +
geom_boxplot(alpha = 0.7) +
labs(title = "Boxplot de la Magnitud del Error Lineal", x = "Tipo de Plan", y = "Magnitud del Error Lineal [cm]", fill = "Tipo de Plan") +
theme_minimal() +
scale_fill_manual(values = c("red", "green")) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5, size = 18),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14, color = "black"),
axis.text.x = element_text(vjust = 0.5, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
legend.position = "none",
legend.text = element_text(size = 16),
legend.title = element_text(size = 18)
)
# Guardar el gráfico en un archivo
ggsave(filename = paste0("pastel_box_v_lineal_tipo.svg"), plot = p_box_v_lineal, width = 10, height = 8)
# Boxplot de magnitud lineal
p_box_v_lineal <- ggplot(datos_filtrados_lineal, aes(x = factor(tipo), y = magnitud_lineal, fill = factor(tipo))) +
geom_boxplot(alpha = 0.7) +
labs(title = "Boxplot de la Magnitud del Error Lineal", x = "Tipo de Plan", y = "Magnitud del Error Lineal [cm]", fill = "Tipo de Plan") +
theme_minimal() +
scale_fill_manual(values = c("red", "green")) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5, size = 18),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14, color = "black"),
axis.text.x = element_text(vjust = 0.5, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
legend.position = "none",
legend.text = element_text(size = 16),
legend.title = element_text(size = 18)
)
# Guardar el gráfico en un archivo
ggsave(filename = paste0("pastel_box_v_lineal_tipo.svg"), plot = p_box_v_lineal, width = 10, height = 8)
# Boxplot de magnitud angular
p_box_v_angular <- ggplot(datos_filtrados_angular, aes(x = factor(tipo), y = magnitud_angular, fill = factor(tipo))) +
geom_boxplot(alpha = 0.7) +
labs(title = "Boxplot de la Magnitud del Error Angular", x = "Tipo de Plan", y = "Magnitud del Error Angular [°]", fill = "Tipo de Plan") +
theme_minimal() +
scale_fill_manual(values = c("red", "green")) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5, size = 18),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14, color = "black"),
axis.text.x = element_text(vjust = 0.5, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
legend.position = "none",
legend.text = element_text(size = 16),
legend.title = element_text(size = 18)
)
# Guardar el gráfico en un archivo
ggsave(filename = paste0("pastel_box_v_angular_tipo.svg"), plot = p_box_v_angular, width = 10, height = 8)
# Boxplot de magnitud lineal
p_box_sbrt_lineal <- ggplot(datos_filtrados_lineal, aes(x = factor(tipo), y = magnitud_lineal, fill = factor(tipo))) +
geom_boxplot(alpha = 0.7) +
labs(title = "Boxplot de la Magnitud del Error Lineal", x = "Tipo de Plan", y = "Magnitud del Error Lineal [cm]", fill = "Tipo de Plan") +
theme_minimal() +
scale_fill_manual(values = c("red", "green")) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5, size = 18),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14, color = "black"),
axis.text.x = element_text(vjust = 0.5, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
legend.position = "none",
legend.text = element_text(size = 16),
legend.title = element_text(size = 18)
)
# Guardar el gráfico en un archivo
ggsave(filename = paste0("pastel_box_sbrt_lineal_tipo.svg"), plot = p_box_sbrt_lineal, width = 10, height = 8)
# Boxplot de magnitud angular
p_box_sbrt_angular <- ggplot(datos_filtrados_angular, aes(x = factor(tipo), y = magnitud_angular, fill = factor(tipo))) +
geom_boxplot(alpha = 0.7) +
labs(title = "Boxplot de la Magnitud del Error Angular", x = "Tipo de Plan", y = "Magnitud del Error Angular [°]", fill = "Tipo de Plan") +
theme_minimal() +
scale_fill_manual(values = c("red", "green")) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5, size = 18),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14, color = "black"),
axis.text.x = element_text(vjust = 0.5, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
legend.position = "none",
legend.text = element_text(size = 16),
legend.title = element_text(size = 18)
)
# Guardar el gráfico en un archivo
ggsave(filename = paste0("pastel_box_v_angular_tipo.svg"), plot = p_box_sbrt_angular, width = 10, height = 8)
# Boxplot de magnitud lineal
p_box_sbrt_lineal <- ggplot(datos_filtrados_lineal, aes(x = factor(tipo), y = magnitud_lineal, fill = factor(tipo))) +
geom_boxplot(alpha = 0.7) +
labs(title = "Boxplot de la magnitud del error lineal", x = "Tipo de tratamiento", y = "Magnitud del error lineal [cm]", fill = "Tipo de tratamiento") +
theme_minimal() +
scale_fill_manual(values = c("red", "green")) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5, size = 18),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14, color = "black"),
axis.text.x = element_text(vjust = 0.5, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
legend.position = "none",
legend.text = element_text(size = 16),
legend.title = element_text(size = 18)
)
# Guardar el gráfico en un archivo
ggsave(filename = paste0("pastel_box_sbrt_lineal_tipo.svg"), plot = p_box_sbrt_lineal, width = 10, height = 8)
# Boxplot de magnitud angular
p_box_sbrt_angular <- ggplot(datos_filtrados_angular, aes(x = factor(tipo), y = magnitud_angular, fill = factor(tipo))) +
geom_boxplot(alpha = 0.7) +
labs(title = "Boxplot de la magnitud del error angular", x = "Tipo de tratamiento", y = "Magnitud del error angular [°]", fill = "Tipo de tratamiento") +
theme_minimal() +
scale_fill_manual(values = c("red", "green")) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5, size = 18),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14, color = "black"),
axis.text.x = element_text(vjust = 0.5, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
legend.position = "none",
legend.text = element_text(size = 16),
legend.title = element_text(size = 18)
)
# Guardar el gráfico en un archivo
ggsave(filename = paste0("pastel_box_v_angular_tipo.svg"), plot = p_box_sbrt_angular, width = 10, height = 8)
# Calcular el promedio y desviación estándar para magnitud lineal
resumen_magnitud_lineal <- datos %>%
group_by(tipo) %>%
summarise(
promedio_lineal = mean(magnitud_lineal, na.rm = TRUE),
sd_lineal = sd(magnitud_lineal, na.rm = TRUE)
)
# Mostrar el resumen de estadísticas para magnitud lineal
print(resumen_magnitud_lineal)
# Calcular el promedio y desviación estándar para magnitud angular
resumen_magnitud_angular <- datos %>%
group_by(tipo) %>%
summarise(
promedio_angular = mean(magnitud_angular, na.rm = TRUE),
sd_angular = sd(magnitud_angular, na.rm = TRUE)
)
# Mostrar el resumen de estadísticas para magnitud angular
print(resumen_magnitud_angular)
# Calcular el promedio y desviación estándar para magnitud lineal
resumen_magnitud_lineal <- datos_filtrados_lineal %>%
group_by(tipo) %>%
summarise(
promedio_lineal = mean(magnitud_lineal, na.rm = TRUE),
sd_lineal = sd(magnitud_lineal, na.rm = TRUE)
)
# Mostrar el resumen de estadísticas para magnitud lineal
print(resumen_magnitud_lineal)
# Calcular el promedio y desviación estándar para magnitud angular
resumen_magnitud_angular <- datos_filtrados_angular %>%
group_by(tipo) %>%
summarise(
promedio_angular = mean(magnitud_angular, na.rm = TRUE),
sd_angular = sd(magnitud_angular, na.rm = TRUE)
)
# Mostrar el resumen de estadísticas para magnitud angular
print(resumen_magnitud_angular)
# Prueba t para magnitud lineal
t_test_lineal <- t.test(magnitud_lineal ~ uso_v, data = datos_filtrados_lineal, var.equal = FALSE)
print(t_test_lineal)
# Prueba t para magnitud angular
t_test_angular <- t.test(magnitud_angular ~ uso_v, data = datos_filtrados_angular, var.equal = FALSE)
print(t_test_angular)
# Filtrar datos para los dos grupos
grupo_sbrt <- datos %>% filter(tipo == "SBRT")  # Pacientes en el plan SBRT
grupo_no_sbrt <- datos %>% filter(tipo != "SBRT")  # Pacientes en otros planes
# Prueba t para magnitud lineal
t_test_lineal <- t.test(magnitud_lineal ~ tipo, data = datos, subset = tipo %in% c("SBRT", "No SBRT"), var.equal = TRUE)
print(t_test_lineal)
# Prueba t para magnitud angular
t_test_angular <- t.test(magnitud_angular ~ tipo, data = datos, subset = tipo %in% c("SBRT", "No SBRT"), var.equal = TRUE)
print(t_test_angular)
# Prueba t para magnitud lineal
t_test_lineal <- t.test(magnitud_lineal ~ tipo, data = datos_filtrados_lineal, subset = tipo %in% c("SBRT", "No SBRT"), var.equal = TRUE)
print(t_test_lineal)
# Prueba t para magnitud angular
t_test_angular <- t.test(magnitud_angular ~ tipo, data = datos_filtrados_angular, subset = tipo %in% c("SBRT", "No SBRT"), var.equal = TRUE)
print(t_test_angular)
# Prueba t para magnitud lineal
t_test_lineal <- t.test(magnitud_lineal ~ tipo, data = datos_filtrados_lineal, subset = tipo %in% c("SBRT", "No SBRT"), var.equal = TRUE)
print(t_test_lineal)
# Prueba t para magnitud lineal
t_test_lineal <- t.test(magnitud_lineal ~ tipo, data = datos_filtrados_lineal, subset = tipo %in% c("SBRT", "No SBRT"), var.equal = FALSE)
# Prueba t para magnitud lineal
t_test_lineal <- t.test(magnitud_lineal ~ tipo, data = datos_filtrados_lineal, subset = tipo %in% c("SBRT", "FX"), var.equal = FALSE)
print(t_test_lineal)
# Prueba t para magnitud lineal
t_test_lineal <- t.test(magnitud_lineal ~ tipo, data = datos, subset = tipo %in% c("SBRT", "No SBRT"), var.equal = FALSE)
# Filtrar datos para los dos grupos
grupo_sbrt <- datos_filtrados_lineal %>% filter(tipo == "SBRT")  # Pacientes en el plan SBRT
grupo_no_sbrt <- datos_filtrados_lineal %>% filter(tipo != "SBRT")  # Pacientes en otros planes
# Prueba t para magnitud lineal
t_test_lineal <- t.test(magnitud_lineal ~ tipo, data = datos_filtrados_lineal, subset = tipo %in% c("SBRT", "No SBRT"), var.equal = FALSE)
print(t_test_lineal)
View(grupo_sbrt)
View(grupo_no_sbrt)
View(grupo_no_sbrt)
